---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ContentCard from "@components/ContentCard.astro";
import { getBlogCardProps, getBriefCardProps, getProjectCardProps } from "@lib/contentCardHelpers";
import Link from "@components/Link.astro";
// import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS } from "@consts";
import { getHomeOGData } from "@lib/opengraph";

const blog = (await getCollection("blog"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_POSTS_ON_HOMEPAGE);

const projects = (await getCollection("projects"))
  .filter(project => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("briefs"))
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_BRIEFS_ON_HOMEPAGE);

const briefs = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

const ogData = getHomeOGData(
  Astro.url.toString(),
  Astro.site?.toString() || ""
);
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION} ogData={ogData}>
  <Container>
    <h4 class="animate font-semibold text-black dark:text-white">
      Hi! <span class="text-xl">üëãüèª</span> 
    </h4>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            <em>Dispatches</em> is where I publish my technical writing. During this initial phase, much of the content will "refurbished-and-expanded": older personal notes or explanations, updated-and-expanded where necessary.

            Expect a focus on Swift, lower-level iOS work, and‚Äîas of late‚Äîagentic coding assistants.
          </p>
        </article>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Latest posts
          </h5>
          <Link href="/blog">
            See all posts
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {blog.map(post => (
            <li>
              <ContentCard {...getBlogCardProps(post, 2)} />
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent briefs
          </h5>
          <Link href="/briefs">
            See all briefs
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {briefs.map(brief => (
            <li>
              <ContentCard {...getBriefCardProps(brief, true, 2)} />
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent projects
          </h5>
          <Link href="/projects">
            See all projects
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {projects.map(project => (
            <li>
              <ContentCard {...getProjectCardProps(project, 2)} />
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">
          Let's Connect
        </h5>
        <article>
          <p>
            If you want to get in touch, please do!
          </p>
        </article>
        <ul class="flex flex-wrap gap-2">
          {SOCIALS.map(SOCIAL => (
            <li class="flex gap-x-2 text-nowrap">
              <Link href={SOCIAL.HREF} external aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}>
                {SOCIAL.NAME}
              </Link>
            </li>
          ))}
        </ul>
      </section>
    </div>
  </Container>
</PageLayout>
