---
import { renderInlineMarkdown } from "@lib/markdown";

type Props = {
  titlePrefix?: string;
  title: string;
  subtitle: string;
  link: string;
  ariaLabel?: string;
}

const { titlePrefix, title, subtitle, link, ariaLabel } = Astro.props;
const renderedTitle = renderInlineMarkdown(title);
const renderedSubtitle = renderInlineMarkdown(subtitle);

// Create accessible label for screen readers
const accessibleLabel = ariaLabel || `${titlePrefix ? titlePrefix + ': ' : ''}${title.replace(/<[^>]*>/g, '')} - ${subtitle.replace(/<[^>]*>/g, '')}`;
---

<a 
  href={link} 
  aria-label={accessibleLabel}
  class="relative group flex flex-nowrap py-3 px-4 pr-10 rounded-lg border border-black/15 dark:border-white/20 hover:bg-black/10 dark:hover:bg-white/10 hover:text-black dark:hover:text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 dark:focus-visible:ring-blue-400 motion-safe:transition-colors motion-safe:duration-300 motion-safe:ease-in-out">
  <div class="flex flex-col flex-1 truncate">
    <h3 class="font-semibold text-base">
      {titlePrefix && (
        <span class="font-bold">{titlePrefix}:&nbsp;</span>
      )}
      <span class="font-semibold" set:html={renderedTitle}></span>
    </h3>
    <p class="text-sm flex-wrap" set:html={renderedSubtitle}></p>
  </div>
  <svg 
    xmlns="http://www.w3.org/2000/svg" 
    viewBox="0 0 24 24"
    aria-hidden="true"
    focusable="false"
    class="absolute top-1/2 right-2 -translate-y-1/2 size-5 stroke-2 fill-none stroke-current">
    <line x1="5" y1="12" x2="19" y2="12" class="translate-x-3 group-hover:translate-x-0 scale-x-0 group-hover:scale-x-100 motion-safe:transition-transform motion-safe:duration-300 motion-safe:ease-in-out" />
    <polyline points="12 5 19 12 12 19" class="-translate-x-1 group-hover:translate-x-0 motion-safe:transition-transform motion-safe:duration-300 motion-safe:ease-in-out" />
  </svg>
</a>
